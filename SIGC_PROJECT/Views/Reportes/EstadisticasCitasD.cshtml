@model SIGC_PROJECT.Models.ViewModel.EstadisticasCitasDocVM

@{
    ViewData["Title"] = "Estadisticas de Citas";
}

<div class="container">
    <div style="margin-top: 8%;">
        <h2 style="font-weight: bold; font-size: 2.3em; color: #04294F;" class="mt-5 mb-3">Total de Citas Registradas: @Model.TotalCitas</h2>
    </div>

    <div class="btn btn-group mt-4" role="group" aria-label="Estadísticas">
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('estadoCitas')">Citas por Estado</button>
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('generoCitas')">Citas por Genero</button>
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('pacienteCitas')">Citas por Paciente</button>
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('mesCitas')">Citas por Mes</button>
    </div>

    <!-- Contenedor de Citas por Estado -->
    <div id="estadoCitasChartContainer" class="chart-container">
        <canvas id="estadoCitasChart"></canvas>
    </div>

    <!-- Contenedor de Citas por Genero-->
    <div id="generoCitasChartContainer" class="chart-container" style="display:none;">
        <canvas id="generoCitasChart"></canvas>
    </div>

    <!-- Contenedor de Citas por Paciente -->
    <div id="pacienteCitasContainer" style="display:none;">
        <div class="row justify-content-center">
            <div class="col-md-12 mt-5">
                <div class="card shadow-sm mb-4">
                    <div class="card-header text-white" style="background-color: rgba(5, 12, 67, 0.8);">
                        <h3 class="card-title m-0 text-center font-weight-bold">Citas por Paciente</h3>
                    </div>

                    <div class="card-body">
                        <ul class="list-group list-group-flush">
                            @foreach (var paciente in Model.citasPorPaciente)
                            {
                                <li class="list-group-item">
                                    <span class="font-weight-bold" style="color: black; font-size: 1.6em;">@paciente.NombrePaciente: </span> <p style="color: black; font-size: 1.6em;">@paciente.CantidadCitas citas realizadas</p>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Contenedor de Citas por Mes-->
    <div id="mesCitasChartContainer" class="chart-container" style="display:none;">
        <canvas id="mesCitasChart"></canvas>
    </div>
</div>

@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    @*==== MOSTRAR LOS GRAFICOS DE REPORTE ====*@
    <script>
        
        //Estados de las citas
        const estadoCitasData = {
            labels: ['Completados', 'Cancelados', 'Pendientes'],
            datasets: [{
                label: 'Citas por Estado',
                data: [@Model.Completados, @Model.Cancelados, @Model.Pendientes],
                backgroundColor: ['#477c5c', '#f0554e', '#3e4787']
            }]
        };
        
        //Genero de los pacientes por citas
        const generoCitasData = {
            labels: ['Femenino', 'Masculino'],
            datasets: [{
                label: 'Citas por Genero',
                data: [@Model.PacientesFemeninos, @Model.PacientesMasculinos],
                backgroundColor: ['#660606', '#061166']
            }]
        };

        //Definir colores
        var colores = ['#07195b', '#072389', '#0d33be', '#0938e3', '#007bf7']
        var backgroundColorsM = [];

        for (var i = 0; i < @Model.CitasPorMes.Count(); i++) {
            backgroundColorsM.push(colores[i % colores.length]);
        }

        //Citas por Mes
        const mesCitasData = {
            labels: @Html.Raw(Json.Serialize(Model.CitasPorMes.Select(c => c.Mes))),
            datasets: [{
                label: 'Citas por Mes',
                data: @Html.Raw(Json.Serialize(Model.CitasPorMes.Select(c => c.Total))),
                backgroundColor: backgroundColorsM
            }]
        };

        //Grafico de los estados
        const estadoCitasChart = new Chart(document.getElementById('estadoCitasChart'), {
            type: 'pie',
            data: estadoCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 18,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }

        });

        //Grafico de los estados
        const generoCitasChart = new Chart(document.getElementById('generoCitasChart'), {
            type: 'bar',
            data: generoCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 18,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }

        });

        //Graficos del mes
        const mesCitasChart = new Chart(document.getElementById('mesCitasChart'), {
            type: 'line',
            data: mesCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 16,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }
        });

        function mostrarChart(chartId) {
            // Ocultar todos los contenedores
            document.getElementById('estadoCitasChartContainer').style.display = 'none';
            document.getElementById('generoCitasChartContainer').style.display = 'none';
            document.getElementById('mesCitasChartContainer').style.display = 'none';
            document.getElementById('pacienteCitasContainer').style.display = 'none';

            // Mostrar el contenedor seleccionado
            if (chartId === 'estadoCitas') {
                document.getElementById('estadoCitasChartContainer').style.display = 'block';
            } else if (chartId === 'generoCitas') {
                document.getElementById('generoCitasChartContainer').style.display = 'block';
            } else if (chartId === 'mesCitas') {
                document.getElementById('mesCitasChartContainer').style.display = 'block';
            }else if (chartId === 'pacienteCitas') {
                document.getElementById('pacienteCitasContainer').style.display = 'block';
            }
        }

        // Mostrar el gráfico de estado de citas por defecto
        mostrarChart('estadoCitas');

    </script>

    <!-- ESTILOS -->

    <style>

        .btn-group { 
            width: 100%;
            gap: 15px;
        }

        .btn-group-estilo {
            background-color: rgba(5, 12, 67, 1);
            font-weight: bold;
            color: white;
            border: 2px solid white; 
        }
        
        .btn-group-estilo:hover {
            background-color: rgba(5, 12, 67, 0.8);
            font-weight: bold;
            color: white;
            border: 2px solid white; 
        }

        .chart-container {
            width: 70%; 
            margin: auto;
            margin-top: 5%;
        }
       
    </style>

}