@model SIGC_PROJECT.Models.ViewModel.EstadisticasCitasPacVM

@{
    ViewData["Title"] = "Estadisticas de Citas";
}

<div class="container">
    <div style="margin-top: 8%;">
        <h2 style="font-weight: bold; font-size: 2.3em; color: #04294F;" class="mt-5 mb-3">Total de Citas Realizadas: @Model.TotalCitas</h2>
    </div>

    <div class="btn btn-group mt-4" role="group" aria-label="Estadísticas">
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('estadoCitas')">Citas por Estado</button>
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('doctorCitas')">Citas por Doctor</button>
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('especialidadCitas')">Citas por Especialidad</button>
        <button type="button" class="btn btn-group-estilo" onclick="mostrarChart('mesCitas')">Citas por Mes</button>
    </div>

    <!-- Contenedor de Citas por Estado -->
    <div id="estadoCitasChartContainer" class="chart-container">
        <canvas id="estadoCitasChart"></canvas>
    </div>

    <!-- Contenedor de Citas por Especialidad -->
    <div id="especialidadCitasChartContainer" class="chart-container" style="display:none;">
        <canvas id="especialidadCitasChart"></canvas>
    </div>

    <!-- Contenedor de Citas por Doctor-->
    <div id="doctorCitasChartContainer" class="chart-container" style="display:none;">
        <canvas id="doctorCitasChart"></canvas>
    </div>

    <!-- Contenedor de Citas por Mes-->
    <div id="mesCitasChartContainer" class="chart-container" style="display:none;">
        <canvas id="mesCitasChart"></canvas>
    </div>

</div>

@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        //Estados de las citas
        const estadoCitasData = {
            labels: ['Completados', 'Cancelados', 'Pendientes'],
            datasets: [{
                label: 'Citas por Estado',
                data: [@Model.Completados, @Model.Cancelados, @Model.Pendientes],
                backgroundColor: ['rgba(9, 194, 44, 0.6)', '#f0554e', '#3e4787']
            }]
        };

        //Definir colores
        var colores = ['#07195b', '#072389', '#0d33be', '#0938e3', '#007bf7']
        var backgroundColorsE = [];
        var backgroundColorsD = [];
        var backgroundColorsM = [];

        for (var i = 0; i < @Model.CitasPorEspecialidad.Count(); i++) {
            backgroundColorsE.push(colores[i % colores.length]);
        }

        for (var i = 0; i < @Model.CitasPorDoctor.Count(); i++) {
            backgroundColorsD.push(colores[i % colores.length]);
        }

        for (var i = 0; i < @Model.CitasPorMes.Count(); i++) {
            backgroundColorsM.push(colores[i % colores.length]);
        }

        //Especialidad de las citas
        const especialidadCitasData = {
            labels: @Html.Raw(Json.Serialize(Model.CitasPorEspecialidad.Select(c => c.Especialidad))),
            datasets: [{
                label: 'Citas por Especialidad',
                data: @Html.Raw(Json.Serialize(Model.CitasPorEspecialidad.Select(c => c.Total))),
                backgroundColor: backgroundColorsE
            }]
        };

        //Doctores de las citas
        const doctorCitasData = {
            labels: @Html.Raw(Json.Serialize(Model.CitasPorDoctor.Select(c => c.Doctor))),
            datasets: [{
                label: 'Citas por Doctor',
                data: @Html.Raw(Json.Serialize(Model.CitasPorDoctor.Select(c => c.Total))),
                backgroundColor: backgroundColorsD
            }]
        };

        //Citas por Mes
        const mesCitasData = {
            labels: @Html.Raw(Json.Serialize(Model.CitasPorMes.Select(c => c.Mes))),
            datasets: [{
                label: 'Citas por Mes',
                data: @Html.Raw(Json.Serialize(Model.CitasPorMes.Select(c => c.Total))),
                backgroundColor: backgroundColorsM
            }]
        };

        //Grafico de los estados
        const estadoCitasChart = new Chart(document.getElementById('estadoCitasChart'), {
            type: 'pie',
            data: estadoCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 18,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }

        });

        //Grafico de las especialidades
        const especialidadCitasChart = new Chart(document.getElementById('especialidadCitasChart'), {
            type: 'bar',
            data: especialidadCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 16,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }
        });

        //Grafico de los doctores
        const doctorCitasChart = new Chart(document.getElementById('doctorCitasChart'), {
            type: 'bar',
            data: doctorCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 16,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }
        });

        //Graficos del mes
        const mesCitasChart = new Chart(document.getElementById('mesCitasChart'), {
            type: 'line',
            data: mesCitasData,
            options: {
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                size: 18,
                                weight: 'bold'
                            },
                            color: '#333',
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: 14
                        },
                        titleFont: {
                            size: 16,
                            weight: 'bold'
                        },
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        titleColor: '#fff',
                        bodyColor: '#fff'
                    }
                }
            }
        });

        function mostrarChart(chartId) {
            // Ocultar todos los contenedores
            document.getElementById('estadoCitasChartContainer').style.display = 'none';
            document.getElementById('especialidadCitasChartContainer').style.display = 'none';
            document.getElementById('doctorCitasChartContainer').style.display = 'none';
            document.getElementById('mesCitasChartContainer').style.display = 'none';

            // Mostrar el contenedor seleccionado
            if (chartId === 'estadoCitas') {
                document.getElementById('estadoCitasChartContainer').style.display = 'block';
            } else if (chartId === 'especialidadCitas') {
                document.getElementById('especialidadCitasChartContainer').style.display = 'block';
            } else if (chartId === 'doctorCitas') {
                document.getElementById('doctorCitasChartContainer').style.display = 'block';
            } else if (chartId === 'mesCitas') {
                document.getElementById('mesCitasChartContainer').style.display = 'block';
            }
        }

        // Mostrar el gráfico de estado de citas por defecto
        mostrarChart('estadoCitas');
    </script>

    <!-- ESTILOS -->

    <style>
        .btn-group { 
            width: 100%;
            gap: 15px;
        }

        .btn-group-estilo {
            background-color: rgba(5, 12, 67, 1);
            font-weight: bold;
            color: white;
            border: 2px solid white; 
        }
        
        .btn-group-estilo:hover {
            background-color: rgba(5, 12, 67, 0.8);
            font-weight: bold;
            color: white;
            border: 2px solid white; 
        }

        .chart-container {
            width: 70%; 
            margin: auto;
            margin-top: 5%;
        }
    </style>
}